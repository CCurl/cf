(( core )) ->codecode + ; ->varsvars + ; ->dictdict + ; lex(lex) @c ; >lex(lex) !C ;    
here (here)  @c ; last(last) @c ; vhere(vhere) @c ; ,here dup 1+ (here) !c !c ;            
beginhere ; again(jmp) , , ; while(jmpnz) , , ; until(jmpz) , , ;                          
if (jmpz)  , here 0 , ; else(jmp) , here swap 0 , here swap !c ; thenhere swap !c ;          
-if(njmpz) , here 0 , ; allotvhere + (vhere) !c ; ,vvhere ->vars ! cell allot ;              
cellscell * ; hex$10 base !c ; binary%10 base !c ; decimal#10 base !c ; 2-1- 1- ;        
nipswap drop ; tuckswap over ; ?dup-ifdupthen; 2dupover over ; 2+1+ 1+ ; 2/2 / ;    
min2dup >ifswapthendrop ; max2dup <ifswapthendrop ;  c+!tuck c@ + swap c! ;          
negatecom 1+ ; absdup 0 <ifnegatethen ; mod/mod drop ; +! tuck  @ + swap  ! ;          
bl32 ; (.)to-string count type ; .(.) spacebl emit; cr13 emit 10 emit ;                 
tab9 emit ; ?@ . ; ->xtw@ ; ->size2+ c@ ; ->flags3 + c@ ; ->lex4 + c@ ;                
->len5 + ; ->name 6 + ; lex-match?( a--f )->lex lex = lex 0= or ;                           
wordsa >r  0 dup >a >r  last ->dictbegindup lex-match?ifdup ->len count type                 
       r> 1+ >r  dup ->len c@ 7 >ifa+ dropthena+ 8 >ifcr 0 >aelsetabthen then             
      dup ->size + dup dict-sz ->dict <whiledrop '(' emit r> .." words)"r> >a ;               
,1$10000 /mod swap , ; ,cellcell 2/ for ,1 next drop ;                                         
constadd-word (lit2) , ,cell(exit) , ; varvhere ->vars  const cell allot ;                    
m1     here 20 !c  last 21 !c  vhere 22 !c ;                                                     
marker here 23 !c  last 24 !c  vhere 25 !c ;                                                     
f1     20 @c (here) !c  21 @c (last) !c  22 @c (vhere) !c ;                                      
forget 23 @c (here) !c  24 @c (last) !c  25 @c (vhere) !c  0 >lex ; marker m1                   
.02'.' emit 10 /mod (.) (.) ; .verversion 100 /mod 100 /mod (.) .02 .02 ;                      
hi." cf - v".ver."  - Chris Curl."cr ;                                                        
hiforget  9 load                                                                                 
                                                                                                   
