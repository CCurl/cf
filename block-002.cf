 (( block 2 - editor ))  [ 5 load ( screen ) [ 3 load ( strings )  [ 2 >lex  : rl forget 2
load ;  : rows ( --n )  40 @c ;   : >rows ( n-- )  40 !c ; : cols ( --n )  41 @c ;   : >cols ( n--
)  41 !C ; : row  ( --n )  42 @c ;   : >row  ( n-- )  42 !c ; : col  ( --n )  43 @c ;   : >col  (
n-- )  43 !c ; : pos  ( --n )  44 @c ;   : >pos  ( n-- )  44 !c ; : blk  ( --n )  45 @c ;   :
>blk  ( n-- )  45 !c ; : mod  ( --n )  46 @c ;   : >mod  ( n-- )  46 !c ; : block-sz rows cols * ; 
[ 30 >rows 100 >cols [ var block  block-sz allot  : rc->pos ( -- )   row cols * col + >pos ; :
pos->rc ( -- )   pos cols /mod >row >col ; : ->pos   ( -- )   pos->rc row 1+ col 1+ ->rc ; :
->foot  ( -- )   rows 1+ 1 ->rc ; : ->cmd   ( -- )   rows 2+ 1 ->rc ; : move  ( dist-- )  pos + 0 max
block-sz min >pos  pos->rc ; : prev-line  cols negate move ; : next-line  cols move ; : set-color
( c--c )     dup 0=  if exit then     dup 7 > if exit then 	dup 30 + fg ; : footer ->foot ."
block " blk . bl mod if drop '*' then emit ; : show-row  cols for 		a+ c@ set-color 		dup bl < if
drop bl then emit 	next ; : show    ( -- ) 1 dup ->rc  block >a 	rows for show-row cr next footer
;  : dump ( from num-- )  for dup c@ . 1+ next  drop ; : test-block a >r  block >a 	rows for cols
for i 10 mod '1' + a+ c! next next     r> >a ; : init-block block  0  block-sz fill ; :
dump-block block block-sz dump ;  : fopen-rb ( fn--fh )   " rb" fopen ; : fopen-wb ( fn--fh )   " wb"
fopen ;  : block-fn ( --s )  p1 " block-" s-cpy 	blk 10 /mod 10 /mod 	3 for p1 swap '0' + s-catc
drop next 	" .c4" s-cat ;  : read-block init-block  block-fn fopen-rb >a     a [ if ] block
block-sz a fread  drop  a fclose [ then ] ;  : save-block block-fn fopen-wb >a     a [ if ] block
block-sz a fwrite  a fclose [ then ] ;  : ed ( -- )  read-block show 0 >pos ; (( 2 >blk  1 >mod ed ))
                                                                                                   
                                                                                                   
                                                                                                   
                                                                                                   
                                                                                                   
                                                                                                   
